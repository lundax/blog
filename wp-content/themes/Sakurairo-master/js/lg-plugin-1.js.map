{"version":3,"file":"lg-plugin-1.js","mappings":"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","sources":["webpack://sakurairo-scripts/./node_modules/lightgallery/plugins/comment/lg-comment.es5.js"],"sourcesContent":["/*!\n * lightgallery | 2.3.0 | October 28th 2021\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n};\n\nvar commentSettings = {\r\n    commentBox: false,\r\n    fbComments: false,\r\n    disqusComments: false,\r\n    disqusConfig: {\r\n        title: undefined,\r\n        language: 'en',\r\n    },\r\n    commentsMarkup: '<div id=\"lg-comment-box\" class=\"lg-comment-box lg-fb-comment-box\"><div class=\"lg-comment-header\"><h3 class=\"lg-comment-title\">Leave a comment.</h3><span class=\"lg-comment-close lg-icon\"></span></div><div class=\"lg-comment-body\"></div></div>',\r\n};\n\n/**\r\n * lightGallery comments module\r\n * Supports facebook and disqus comments\r\n *\r\n * @ref - https://help.disqus.com/customer/portal/articles/472098-javascript-configuration-variables\r\n * @ref - https://github.com/disqus/DISQUS-API-Recipes/blob/master/snippets/js/disqus-reset/disqus_reset.html\r\n * @ref - https://css-tricks.com/lazy-loading-disqus-comments/\r\n * @ref - https://developers.facebook.com/docs/plugins/comments/#comments-plugin\r\n *\r\n */\r\nvar CommentBox = /** @class */ (function () {\r\n    function CommentBox(instance, $LG) {\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        // extend module default settings with lightGallery core settings\r\n        this.settings = __assign(__assign({}, commentSettings), this.core.settings);\r\n        return this;\r\n    }\r\n    CommentBox.prototype.init = function () {\r\n        if (!this.settings.commentBox) {\r\n            return;\r\n        }\r\n        this.setMarkup();\r\n        this.toggleCommentBox();\r\n        if (this.settings.fbComments) {\r\n            this.addFbComments();\r\n        }\r\n        else if (this.settings.disqusComments) {\r\n            this.addDisqusComments();\r\n        }\r\n    };\r\n    CommentBox.prototype.setMarkup = function () {\r\n        this.core.outer.append(this.settings.commentsMarkup +\r\n            '<div class=\"lg-comment-overlay\"></div>');\r\n        var commentToggleBtn = '<button type=\"button\" aria-label=\"Toggle comments\" class=\"lg-comment-toggle lg-icon\"></button>';\r\n        this.core.$toolbar.append(commentToggleBtn);\r\n    };\r\n    CommentBox.prototype.toggleCommentBox = function () {\r\n        var _this_1 = this;\r\n        this.core.outer\r\n            .find('.lg-comment-toggle')\r\n            .first()\r\n            .on('click.lg.comment', function () {\r\n            _this_1.core.outer.toggleClass('lg-comment-active');\r\n        });\r\n        this.core.outer\r\n            .find('.lg-comment-overlay')\r\n            .first()\r\n            .on('click.lg.comment', function () {\r\n            _this_1.core.outer.removeClass('lg-comment-active');\r\n        });\r\n        this.core.outer\r\n            .find('.lg-comment-close')\r\n            .first()\r\n            .on('click.lg.comment', function () {\r\n            _this_1.core.outer.removeClass('lg-comment-active');\r\n        });\r\n    };\r\n    CommentBox.prototype.addFbComments = function () {\r\n        var _this_1 = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        var _this = this;\r\n        this.core.LGel.on(lGEvents.beforeSlide + \".comment\", function (event) {\r\n            var html = _this_1.core.galleryItems[event.detail.index].fbHtml;\r\n            _this_1.core.outer.find('.lg-comment-body').html(html);\r\n        });\r\n        this.core.LGel.on(lGEvents.afterSlide + \".comment\", function () {\r\n            try {\r\n                FB.XFBML.parse();\r\n            }\r\n            catch (err) {\r\n                _this.$LG(window).on('fbAsyncInit', function () {\r\n                    FB.XFBML.parse();\r\n                });\r\n            }\r\n        });\r\n    };\r\n    CommentBox.prototype.addDisqusComments = function () {\r\n        var _this_1 = this;\r\n        var $disqusThread = this.$LG('#disqus_thread');\r\n        $disqusThread.remove();\r\n        this.core.outer\r\n            .find('.lg-comment-body')\r\n            .append('<div id=\"disqus_thread\"></div>');\r\n        this.core.LGel.on(lGEvents.beforeSlide + \".comment\", function () {\r\n            $disqusThread.html('');\r\n        });\r\n        this.core.LGel.on(lGEvents.afterSlide + \".comment\", function (event) {\r\n            var index = event.detail.index;\r\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n            var _this = _this_1;\r\n            // DISQUS needs sometime to intialize when lightGallery is opened from direct url(hash plugin).\r\n            setTimeout(function () {\r\n                try {\r\n                    DISQUS.reset({\r\n                        reload: true,\r\n                        config: function () {\r\n                            this.page.identifier =\r\n                                _this.core.galleryItems[index].disqusIdentifier;\r\n                            this.page.url =\r\n                                _this.core.galleryItems[index].disqusURL;\r\n                            this.page.title =\r\n                                _this.settings.disqusConfig.title;\r\n                            this.language =\r\n                                _this.settings.disqusConfig.language;\r\n                        },\r\n                    });\r\n                }\r\n                catch (err) {\r\n                    console.error('Make sure you have included disqus JavaScript code in your document. Ex - https://lg-disqus.disqus.com/admin/install/platforms/universalcode/');\r\n                }\r\n            }, _this.core.lGalleryOn ? 0 : 1000);\r\n        });\r\n    };\r\n    CommentBox.prototype.destroy = function () {\r\n        this.core.LGel.off('.lg.comment');\r\n        this.core.LGel.off('.comment');\r\n    };\r\n    return CommentBox;\r\n}());\n\nexport default CommentBox;\n//# sourceMappingURL=lg-comment.es5.js.map\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","lGEvents","commentSettings","commentBox","fbComments","disqusComments","disqusConfig","title","undefined","language","commentsMarkup","CommentBox","instance","$LG","core","settings","init","setMarkup","toggleCommentBox","addFbComments","addDisqusComments","outer","append","$toolbar","_this_1","find","first","on","toggleClass","removeClass","_this","LGel","event","html","galleryItems","detail","index","fbHtml","FB","XFBML","parse","err","window","$disqusThread","remove","setTimeout","DISQUS","reset","reload","config","page","identifier","disqusIdentifier","url","disqusURL","console","error","lGalleryOn","destroy","off"],"sourceRoot":""}