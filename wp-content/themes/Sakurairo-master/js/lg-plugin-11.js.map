{"version":3,"file":"lg-plugin-11.js","mappings":"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","sources":["webpack://sakurairo-scripts/./node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js"],"sourcesContent":["/*!\n * lightgallery | 2.3.0 | October 28th 2021\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar zoomSettings = {\r\n    scale: 1,\r\n    zoom: true,\r\n    actualSize: true,\r\n    showZoomInOutIcons: false,\r\n    actualSizeIcons: {\r\n        zoomIn: 'lg-zoom-in',\r\n        zoomOut: 'lg-zoom-out',\r\n    },\r\n    enableZoomAfter: 300,\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n};\n\nvar Zoom = /** @class */ (function () {\r\n    function Zoom(instance, $LG) {\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n        return this;\r\n    }\r\n    // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n    Zoom.prototype.buildTemplates = function () {\r\n        var zoomIcons = this.settings.showZoomInOutIcons\r\n            ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"Zoom in\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"Zoom out\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n            : '';\r\n        if (this.settings.actualSize) {\r\n            zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"View actual size\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n        }\r\n        this.core.outer.addClass('lg-use-transition-for-zoom');\r\n        this.core.$toolbar.first().append(zoomIcons);\r\n    };\r\n    /**\r\n     * @desc Enable zoom option only once the image is completely loaded\r\n     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n     *\r\n     * Zoom styles are defined under lg-zoomable CSS class.\r\n     */\r\n    Zoom.prototype.enableZoom = function (event) {\r\n        var _this = this;\r\n        // delay will be 0 except first time\r\n        var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n        // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n        if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n            event.detail.delay) {\r\n            // will execute only once\r\n            _speed = 0;\r\n        }\r\n        else {\r\n            // Remove lg-from-hash to enable starting animation.\r\n            this.$LG('body').first().removeClass('lg-from-hash');\r\n        }\r\n        this.zoomableTimeout = setTimeout(function () {\r\n            if (!_this.isImageSlide()) {\r\n                return;\r\n            }\r\n            _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n            if (event.detail.index === _this.core.index) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        }, _speed + 30);\r\n    };\r\n    Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n        // Add zoomable class\r\n        this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n    };\r\n    Zoom.prototype.getModifier = function (rotateValue, axis, el) {\r\n        var originalRotate = rotateValue;\r\n        rotateValue = Math.abs(rotateValue);\r\n        var transformValues = this.getCurrentTransform(el);\r\n        if (!transformValues) {\r\n            return 1;\r\n        }\r\n        var modifier = 1;\r\n        if (axis === 'X') {\r\n            var flipHorizontalValue = Math.sign(parseFloat(transformValues[0]));\r\n            if (rotateValue === 0 || rotateValue === 180) {\r\n                modifier = 1;\r\n            }\r\n            else if (rotateValue === 90) {\r\n                if ((originalRotate === -90 && flipHorizontalValue === 1) ||\r\n                    (originalRotate === 90 && flipHorizontalValue === -1)) {\r\n                    modifier = -1;\r\n                }\r\n                else {\r\n                    modifier = 1;\r\n                }\r\n            }\r\n            modifier = modifier * flipHorizontalValue;\r\n        }\r\n        else {\r\n            var flipVerticalValue = Math.sign(parseFloat(transformValues[3]));\r\n            if (rotateValue === 0 || rotateValue === 180) {\r\n                modifier = 1;\r\n            }\r\n            else if (rotateValue === 90) {\r\n                var sinX = parseFloat(transformValues[1]);\r\n                var sinMinusX = parseFloat(transformValues[2]);\r\n                modifier = Math.sign(sinX * sinMinusX * originalRotate * flipVerticalValue);\r\n            }\r\n            modifier = modifier * flipVerticalValue;\r\n        }\r\n        return modifier;\r\n    };\r\n    Zoom.prototype.getImageSize = function ($image, rotateValue, axis) {\r\n        var imageSizes = {\r\n            y: 'offsetHeight',\r\n            x: 'offsetWidth',\r\n        };\r\n        if (Math.abs(rotateValue) === 90) {\r\n            // Swap axis\r\n            if (axis === 'x') {\r\n                axis = 'y';\r\n            }\r\n            else {\r\n                axis = 'x';\r\n            }\r\n        }\r\n        return $image[imageSizes[axis]];\r\n    };\r\n    Zoom.prototype.getDragCords = function (e, rotateValue) {\r\n        if (rotateValue === 90) {\r\n            return {\r\n                x: e.pageY,\r\n                y: e.pageX,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                x: e.pageX,\r\n                y: e.pageY,\r\n            };\r\n        }\r\n    };\r\n    Zoom.prototype.getSwipeCords = function (e, rotateValue) {\r\n        var x = e.targetTouches[0].pageX;\r\n        var y = e.targetTouches[0].pageY;\r\n        if (rotateValue === 90) {\r\n            return {\r\n                x: y,\r\n                y: x,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                x: x,\r\n                y: y,\r\n            };\r\n        }\r\n    };\r\n    Zoom.prototype.getDragAllowedAxises = function (rotateValue, scale) {\r\n        scale = scale || this.scale || 1;\r\n        var allowY = this.imageYSize * scale > this.containerRect.height;\r\n        var allowX = this.imageXSize * scale > this.containerRect.width;\r\n        if (rotateValue === 90) {\r\n            return {\r\n                allowX: allowY,\r\n                allowY: allowX,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                allowX: allowX,\r\n                allowY: allowY,\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Element} el\r\n     * @return matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\r\n     * Get the current transform value\r\n     */\r\n    Zoom.prototype.getCurrentTransform = function (el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        var st = window.getComputedStyle(el, null);\r\n        var tm = st.getPropertyValue('-webkit-transform') ||\r\n            st.getPropertyValue('-moz-transform') ||\r\n            st.getPropertyValue('-ms-transform') ||\r\n            st.getPropertyValue('-o-transform') ||\r\n            st.getPropertyValue('transform') ||\r\n            'none';\r\n        if (tm !== 'none') {\r\n            return tm.split('(')[1].split(')')[0].split(',');\r\n        }\r\n        return;\r\n    };\r\n    Zoom.prototype.getCurrentRotation = function (el) {\r\n        if (!el) {\r\n            return 0;\r\n        }\r\n        var values = this.getCurrentTransform(el);\r\n        if (values) {\r\n            return Math.round(Math.atan2(parseFloat(values[1]), parseFloat(values[0])) *\r\n                (180 / Math.PI));\r\n            // If you want rotate in 360\r\n            //return (angle < 0 ? angle + 360 : angle);\r\n        }\r\n        return 0;\r\n    };\r\n    Zoom.prototype.setZoomEssentials = function () {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var rotateEl = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-rotate')\r\n            .first()\r\n            .get();\r\n        this.rotateValue = this.getCurrentRotation(rotateEl);\r\n        this.imageYSize = this.getImageSize($image.get(), this.rotateValue, 'y');\r\n        this.imageXSize = this.getImageSize($image.get(), this.rotateValue, 'x');\r\n        this.containerRect = this.core.outer.get().getBoundingClientRect();\r\n        this.modifierX = this.getModifier(this.rotateValue, 'X', rotateEl);\r\n        this.modifierY = this.getModifier(this.rotateValue, 'Y', rotateEl);\r\n    };\r\n    /**\r\n     * @desc Image zoom\r\n     * Translate the wrap and scale the image to get better user experience\r\n     *\r\n     * @param {String} scale - Zoom decrement/increment value\r\n     */\r\n    Zoom.prototype.zoomImage = function (scale) {\r\n        // Find offset manually to avoid issue after zoom\r\n        var offsetX = (this.containerRect.width - this.imageXSize) / 2 +\r\n            this.containerRect.left;\r\n        var _a = this.core.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n        var topBottomSpacing = Math.abs(top - bottom) / 2;\r\n        var offsetY = (this.containerRect.height -\r\n            this.imageYSize -\r\n            topBottomSpacing * this.modifierX) /\r\n            2 +\r\n            this.scrollTop +\r\n            this.containerRect.top;\r\n        var originalX;\r\n        var originalY;\r\n        if (scale === 1) {\r\n            this.positionChanged = false;\r\n        }\r\n        var dragAllowedAxises = this.getDragAllowedAxises(Math.abs(this.rotateValue), scale);\r\n        var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;\r\n        if (this.positionChanged) {\r\n            originalX = this.left / (this.scale - 1);\r\n            originalY = this.top / (this.scale - 1);\r\n            this.pageX = Math.abs(originalX) + offsetX;\r\n            this.pageY = Math.abs(originalY) + offsetY;\r\n            this.positionChanged = false;\r\n        }\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords(this.rotateValue, scale);\r\n        var _x = offsetX - this.pageX;\r\n        var _y = offsetY - this.pageY;\r\n        var x = (scale - 1) * _x;\r\n        var y = (scale - 1) * _y;\r\n        if (allowX) {\r\n            if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\r\n                x = possibleSwipeCords.minX;\r\n            }\r\n            else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\r\n                x = possibleSwipeCords.maxX;\r\n            }\r\n        }\r\n        else {\r\n            if (scale > 1) {\r\n                if (x < possibleSwipeCords.minX) {\r\n                    x = possibleSwipeCords.minX;\r\n                }\r\n                else if (x > possibleSwipeCords.maxX) {\r\n                    x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n        }\r\n        if (allowY) {\r\n            if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\r\n                y = possibleSwipeCords.minY;\r\n            }\r\n            else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\r\n                y = possibleSwipeCords.maxY;\r\n            }\r\n        }\r\n        else {\r\n            // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\r\n            if (scale > 1) {\r\n                //If image goes beyond viewport top, use the minim possible translate value\r\n                if (y < possibleSwipeCords.minY) {\r\n                    y = possibleSwipeCords.minY;\r\n                }\r\n                else if (y > possibleSwipeCords.maxY) {\r\n                    y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n        }\r\n        this.setZoomStyles({\r\n            x: x,\r\n            y: y,\r\n            scale: scale,\r\n        });\r\n    };\r\n    /**\r\n     * @desc apply scale3d to image and translate to image wrap\r\n     * @param {style} X,Y and scale\r\n     */\r\n    Zoom.prototype.setZoomStyles = function (style) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var $dummyImage = this.core.outer\r\n            .find('.lg-current .lg-dummy-img')\r\n            .first();\r\n        var $imageWrap = $image.parent();\r\n        this.scale = style.scale;\r\n        $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\r\n        $imageWrap.css('transform', transform);\r\n        this.left = style.x;\r\n        this.top = style.y;\r\n    };\r\n    /**\r\n     * @param index - Index of the current slide\r\n     * @param event - event will be available only if the function is called on clicking/taping the imags\r\n     */\r\n    Zoom.prototype.setActualSize = function (index, event) {\r\n        var _this = this;\r\n        // Allow zoom only on image\r\n        if (!this.isImageSlide() ||\r\n            this.core.outer.hasClass('lg-first-slide-loading')) {\r\n            return;\r\n        }\r\n        var scale = this.getCurrentImageActualSizeScale();\r\n        if (this.core.outer.hasClass('lg-zoomed')) {\r\n            this.scale = 1;\r\n        }\r\n        else {\r\n            this.scale = this.getScale(scale);\r\n        }\r\n        this.setPageCords(event);\r\n        this.beginZoom(this.scale);\r\n        this.zoomImage(this.scale);\r\n        setTimeout(function () {\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        }, 10);\r\n    };\r\n    Zoom.prototype.getNaturalWidth = function (index) {\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        var naturalWidth = this.core.galleryItems[index].width;\r\n        return naturalWidth\r\n            ? parseFloat(naturalWidth)\r\n            : $image.get().naturalWidth;\r\n    };\r\n    Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n        var _scale;\r\n        var scale;\r\n        if (naturalWidth > width) {\r\n            _scale = naturalWidth / width;\r\n            scale = _scale || 2;\r\n        }\r\n        else {\r\n            scale = 1;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var width = $image.get().offsetWidth;\r\n        var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n        return this.getActualSizeScale(naturalWidth, width);\r\n    };\r\n    Zoom.prototype.getPageCords = function (event) {\r\n        var cords = {};\r\n        if (event) {\r\n            cords.x = event.pageX || event.targetTouches[0].pageX;\r\n            cords.y = event.pageY || event.targetTouches[0].pageY;\r\n        }\r\n        else {\r\n            var containerRect = this.core.outer.get().getBoundingClientRect();\r\n            cords.x = containerRect.width / 2 + containerRect.left;\r\n            cords.y =\r\n                containerRect.height / 2 + this.scrollTop + containerRect.top;\r\n        }\r\n        return cords;\r\n    };\r\n    Zoom.prototype.setPageCords = function (event) {\r\n        var pageCords = this.getPageCords(event);\r\n        this.pageX = pageCords.x;\r\n        this.pageY = pageCords.y;\r\n    };\r\n    // If true, zoomed - in else zoomed out\r\n    Zoom.prototype.beginZoom = function (scale) {\r\n        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n        if (scale > 1) {\r\n            this.core.outer.addClass('lg-zoomed');\r\n            var $actualSize = this.core.getElementById('lg-actual-size');\r\n            $actualSize\r\n                .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n                .addClass(this.settings.actualSizeIcons.zoomOut);\r\n        }\r\n        else {\r\n            this.resetZoom();\r\n        }\r\n        return scale > 1;\r\n    };\r\n    Zoom.prototype.getScale = function (scale) {\r\n        var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n        if (scale < 1) {\r\n            scale = 1;\r\n        }\r\n        else if (scale > actualSizeScale) {\r\n            scale = actualSizeScale;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.init = function () {\r\n        var _this = this;\r\n        if (!this.settings.zoom) {\r\n            return;\r\n        }\r\n        this.buildTemplates();\r\n        this.enableZoomOnSlideItemLoad();\r\n        var tapped = null;\r\n        this.core.outer.on('dblclick.lg', function (event) {\r\n            if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                return;\r\n            }\r\n            _this.setActualSize(_this.core.index, event);\r\n        });\r\n        this.core.outer.on('touchstart.lg', function (event) {\r\n            var $target = _this.$LG(event.target);\r\n            if (event.targetTouches.length === 1 &&\r\n                $target.hasClass('lg-image')) {\r\n                if (!tapped) {\r\n                    tapped = setTimeout(function () {\r\n                        tapped = null;\r\n                    }, 300);\r\n                }\r\n                else {\r\n                    clearTimeout(tapped);\r\n                    tapped = null;\r\n                    event.preventDefault();\r\n                    _this.setActualSize(_this.core.index, event);\r\n                }\r\n            }\r\n        });\r\n        // Update zoom on resize and orientationchange\r\n        this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\r\n            if (!_this.core.lgOpened || !_this.isImageSlide())\r\n                return;\r\n            _this.setPageCords();\r\n            _this.setZoomEssentials();\r\n            _this.zoomImage(_this.scale);\r\n        });\r\n        // Update zoom on resize and orientationchange\r\n        this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n        });\r\n        this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n            if (_this.core.outer.find('.lg-current .lg-image').get()) {\r\n                _this.scale -= _this.settings.scale;\r\n                _this.scale = _this.getScale(_this.scale);\r\n                _this.beginZoom(_this.scale);\r\n                _this.zoomImage(_this.scale);\r\n            }\r\n        });\r\n        this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n            _this.zoomIn();\r\n        });\r\n        this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n            _this.setActualSize(_this.core.index);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n            _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n        });\r\n        this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n            // Set the initial value center\r\n            _this.pageX = _this.core.outer.width() / 2;\r\n            _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\r\n            _this.scale = 1;\r\n        });\r\n        // Reset zoom on slide change\r\n        this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n            var prevIndex = event.detail.prevIndex;\r\n            _this.scale = 1;\r\n            _this.positionChanged = false;\r\n            _this.resetZoom(prevIndex);\r\n            if (_this.isImageSlide()) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        });\r\n        // Drag option after zoom\r\n        this.zoomDrag();\r\n        this.pinchZoom();\r\n        this.zoomSwipe();\r\n        // Store the zoomable timeout value just to clear it while closing\r\n        this.zoomableTimeout = false;\r\n        this.positionChanged = false;\r\n    };\r\n    Zoom.prototype.zoomIn = function (scale) {\r\n        // Allow zoom only on image\r\n        if (!this.isImageSlide()) {\r\n            return;\r\n        }\r\n        if (scale) {\r\n            this.scale = scale;\r\n        }\r\n        else {\r\n            this.scale += this.settings.scale;\r\n        }\r\n        this.scale = this.getScale(this.scale);\r\n        this.beginZoom(this.scale);\r\n        this.zoomImage(this.scale);\r\n    };\r\n    // Reset zoom effect\r\n    Zoom.prototype.resetZoom = function (index) {\r\n        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n            .addClass(this.settings.actualSizeIcons.zoomIn);\r\n        $item.find('.lg-img-wrap').first().removeAttr('style');\r\n        $item.find('.lg-image').first().removeAttr('style');\r\n        this.scale = 1;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        // Reset pagx pagy values to center\r\n        this.setPageCords();\r\n    };\r\n    Zoom.prototype.getTouchDistance = function (e) {\r\n        return Math.sqrt((e.targetTouches[0].pageX - e.targetTouches[1].pageX) *\r\n            (e.targetTouches[0].pageX - e.targetTouches[1].pageX) +\r\n            (e.targetTouches[0].pageY - e.targetTouches[1].pageY) *\r\n                (e.targetTouches[0].pageY - e.targetTouches[1].pageY));\r\n    };\r\n    Zoom.prototype.pinchZoom = function () {\r\n        var _this = this;\r\n        var startDist = 0;\r\n        var pinchStarted = false;\r\n        var initScale = 1;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.$inner.on('touchstart.lg', function (e) {\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if (!_this.isImageSlide()) {\r\n                return;\r\n            }\r\n            if (e.targetTouches.length === 2 &&\r\n                !_this.core.outer.hasClass('lg-first-slide-loading') &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                initScale = _this.scale || 1;\r\n                _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                _this.core.touchAction = 'pinch';\r\n                startDist = _this.getTouchDistance(e);\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.targetTouches.length === 2 &&\r\n                _this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                var endDist = _this.getTouchDistance(e);\r\n                var distance = startDist - endDist;\r\n                if (!pinchStarted && Math.abs(distance) > 5) {\r\n                    pinchStarted = true;\r\n                }\r\n                if (pinchStarted) {\r\n                    _this.scale = Math.max(1, initScale + -distance * 0.008);\r\n                    _this.zoomImage(_this.scale);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                pinchStarted = false;\r\n                startDist = 0;\r\n                if (_this.scale <= 1) {\r\n                    _this.resetZoom();\r\n                }\r\n                else {\r\n                    _this.scale = _this.getScale(_this.scale);\r\n                    _this.zoomImage(_this.scale);\r\n                    _this.core.outer.addClass('lg-zoomed');\r\n                }\r\n                _this.core.touchAction = undefined;\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration, rotateValue) {\r\n        var distanceXnew = endCoords.x - startCoords.x;\r\n        var distanceYnew = endCoords.y - startCoords.y;\r\n        var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n        var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n        if (speedX > 2) {\r\n            speedX += 1;\r\n        }\r\n        if (speedY > 2) {\r\n            speedY += 1;\r\n        }\r\n        distanceXnew = distanceXnew * speedX;\r\n        distanceYnew = distanceYnew * speedY;\r\n        var _LGel = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var distance = {};\r\n        distance.x = this.left + distanceXnew * this.modifierX;\r\n        distance.y = this.top + distanceYnew * this.modifierY;\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords(rotateValue);\r\n        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                    distance.y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                    distance.y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                    distance.x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                    distance.x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            if (allowY) {\r\n                this.top = distance.y;\r\n            }\r\n            else {\r\n                distance.y = this.top;\r\n            }\r\n            if (allowX) {\r\n                this.left = distance.x;\r\n            }\r\n            else {\r\n                distance.x = this.left;\r\n            }\r\n            this.setZoomSwipeStyles(_LGel, distance);\r\n            this.positionChanged = true;\r\n        }\r\n    };\r\n    Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\r\n        var distance = {};\r\n        if (allowY) {\r\n            distance.y =\r\n                this.top + (endCoords.y - startCoords.y) * this.modifierY;\r\n            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                var diffMinY = possibleSwipeCords.minY - distance.y;\r\n                distance.y = possibleSwipeCords.minY - diffMinY / 6;\r\n            }\r\n            else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                var diffMaxY = distance.y - possibleSwipeCords.maxY;\r\n                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.y = this.top;\r\n        }\r\n        if (allowX) {\r\n            distance.x =\r\n                this.left + (endCoords.x - startCoords.x) * this.modifierX;\r\n            if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                var diffMinX = possibleSwipeCords.minX - distance.x;\r\n                distance.x = possibleSwipeCords.minX - diffMinX / 6;\r\n            }\r\n            else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                var difMaxX = distance.x - possibleSwipeCords.maxX;\r\n                distance.x = possibleSwipeCords.maxX + difMaxX / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.x = this.left;\r\n        }\r\n        return distance;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\r\n        return x >= minX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\r\n        return x <= maxX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\r\n        return y >= minY;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\r\n        return y <= maxY;\r\n    };\r\n    Zoom.prototype.isImageSlide = function () {\r\n        var currentItem = this.core.galleryItems[this.core.index];\r\n        return this.core.getSlideType(currentItem) === 'image';\r\n    };\r\n    Zoom.prototype.getPossibleSwipeDragCords = function (rotateValue, scale) {\r\n        var dataScale = scale || this.scale || 1;\r\n        var elDataScale = Math.abs(dataScale);\r\n        var _a = this.core.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n        var topBottomSpacing = Math.abs(top - bottom) / 2;\r\n        var minY = (this.imageYSize - this.containerRect.height) / 2 +\r\n            topBottomSpacing * this.modifierX;\r\n        var maxY = this.containerRect.height - this.imageYSize * elDataScale + minY;\r\n        var minX = (this.imageXSize - this.containerRect.width) / 2;\r\n        var maxX = this.containerRect.width - this.imageXSize * elDataScale + minX;\r\n        var possibleSwipeCords = {\r\n            minY: minY,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            maxX: maxX,\r\n        };\r\n        if (Math.abs(rotateValue) === 90) {\r\n            possibleSwipeCords = {\r\n                minY: minX,\r\n                maxY: maxX,\r\n                minX: minY,\r\n                maxX: maxY,\r\n            };\r\n        }\r\n        return possibleSwipeCords;\r\n    };\r\n    Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n        LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n    };\r\n    Zoom.prototype.zoomSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime = new Date();\r\n        var endTime = new Date();\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.$inner.on('touchstart.lg', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide()) {\r\n                return;\r\n            }\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) &&\r\n                e.targetTouches.length === 1 &&\r\n                _this.core.outer.hasClass('lg-zoomed')) {\r\n                e.preventDefault();\r\n                startTime = new Date();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(Math.abs(_this.rotateValue));\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (allowX || allowY) {\r\n                    startCoords = _this.getSwipeCords(e, Math.abs(_this.rotateValue));\r\n                }\r\n                possibleSwipeCords = _this.getPossibleSwipeDragCords(_this.rotateValue);\r\n                // reset opacity and transition duration\r\n                _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.targetTouches.length === 1 &&\r\n                _this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                endCoords = _this.getSwipeCords(e, Math.abs(_this.rotateValue));\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                    Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                    isMoved = true;\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                _this.core.touchAction = undefined;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                if (!isMoved) {\r\n                    return;\r\n                }\r\n                isMoved = false;\r\n                endTime = new Date();\r\n                var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration, _this.rotateValue);\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.zoomDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDragging = false;\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime;\r\n        var endTime;\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide()) {\r\n                return;\r\n            }\r\n            var $item = _this.core.getSlideItem(_this.core.index);\r\n            if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) {\r\n                startTime = new Date();\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(Math.abs(_this.rotateValue));\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                    if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                        (allowX || allowY)) {\r\n                        e.preventDefault();\r\n                        startCoords = _this.getDragCords(e, Math.abs(_this.rotateValue));\r\n                        possibleSwipeCords = _this.getPossibleSwipeDragCords(_this.rotateValue);\r\n                        isDragging = true;\r\n                        // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                        _this.core.outer.get().scrollLeft += 1;\r\n                        _this.core.outer.get().scrollLeft -= 1;\r\n                        _this.core.outer\r\n                            .removeClass('lg-grab')\r\n                            .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                        // reset opacity and transition duration\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                isMoved = true;\r\n                endCoords = _this.getDragCords(e, Math.abs(_this.rotateValue));\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                _this.setZoomSwipeStyles(_LGel, distance);\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                endTime = new Date();\r\n                isDragging = false;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                // Fix for chrome mouse move on click\r\n                if (isMoved &&\r\n                    (startCoords.x !== endCoords.x ||\r\n                        startCoords.y !== endCoords.y)) {\r\n                    endCoords = _this.getDragCords(e, Math.abs(_this.rotateValue));\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration, _this.rotateValue);\r\n                }\r\n                isMoved = false;\r\n            }\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        });\r\n    };\r\n    Zoom.prototype.closeGallery = function () {\r\n        this.resetZoom();\r\n    };\r\n    Zoom.prototype.destroy = function () {\r\n        // Unbind all events added by lightGallery zoom plugin\r\n        this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n        this.core.LGel.off('.lg.zoom');\r\n        this.core.LGel.off('.zoom');\r\n        clearTimeout(this.zoomableTimeout);\r\n        this.zoomableTimeout = false;\r\n    };\r\n    return Zoom;\r\n}());\n\nexport default Zoom;\n//# sourceMappingURL=lg-zoom.es5.js.map\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","zoomSettings","scale","zoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","lGEvents","Zoom","instance","$LG","core","settings","buildTemplates","zoomIcons","getIdName","outer","addClass","$toolbar","first","append","enableZoom","event","_this","_speed","detail","delay","hasClass","removeClass","zoomableTimeout","setTimeout","isImageSlide","getSlideItem","index","setZoomEssentials","enableZoomOnSlideItemLoad","LGel","on","bind","getModifier","rotateValue","axis","el","originalRotate","Math","abs","transformValues","getCurrentTransform","modifier","flipHorizontalValue","sign","parseFloat","flipVerticalValue","sinX","sinMinusX","getImageSize","$image","y","x","getDragCords","e","pageY","pageX","getSwipeCords","targetTouches","getDragAllowedAxises","allowY","imageYSize","containerRect","height","allowX","imageXSize","width","st","window","getComputedStyle","tm","getPropertyValue","split","getCurrentRotation","values","round","atan2","PI","find","rotateEl","get","getBoundingClientRect","modifierX","modifierY","zoomImage","originalX","originalY","offsetX","left","_a","mediaContainerPosition","top","bottom","topBottomSpacing","offsetY","scrollTop","positionChanged","dragAllowedAxises","possibleSwipeCords","getPossibleSwipeDragCords","isBeyondPossibleLeft","minX","isBeyondPossibleRight","maxX","isBeyondPossibleTop","minY","isBeyondPossibleBottom","maxY","setZoomStyles","style","$dummyImage","$imageWrap","parent","css","transform","setActualSize","getCurrentImageActualSizeScale","getScale","setPageCords","beginZoom","getNaturalWidth","naturalWidth","galleryItems","getActualSizeScale","offsetWidth","getPageCords","cords","pageCords","getElementById","resetZoom","actualSizeScale","init","tapped","target","$target","clearTimeout","preventDefault","lgOpened","lgId","prevIndex","zoomDrag","pinchZoom","zoomSwipe","$actualSize","$item","undefined","removeAttr","getTouchDistance","sqrt","startDist","pinchStarted","initScale","$inner","contains","touchAction","endDist","distance","max","touchendZoom","startCoords","endCoords","touchDuration","distanceXnew","distanceYnew","speedX","speedY","_LGel","setZoomSwipeStyles","getZoomSwipeCords","diffMinY","diffMaxY","diffMinX","difMaxX","currentItem","getSlideType","dataScale","elDataScale","isMoved","startTime","Date","valueOf","endTime","isDragging","scrollLeft","closeGallery","destroy","off"],"sourceRoot":""}